import numpy as np
import random as rnd

a = [1, 2, 5, 2]
t = a.pop(1)

# print(np.where(a == a.max())[0][0])

train_set = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

sorted_points = [[] for _ in range(3)]

print(sorted_points)

split = int(len(train_set)*0.4)

randy = rnd.randint(0, len(train_set))
randy = 18

if randy + split > len(train_set):
    validation_set = train_set[randy : ] + train_set[ : randy + split - len(train_set)]
    train_set_forward = train_set[ - len(train_set) + randy + split : randy]
    
arr = np.array([[1, 2, 3], [4, 5, 6]])


t1 = ['SlogP_VSA11', 'SlogP_VSA8', 'SlogP_VSA3', 'MolLogP', 'MinPartialCharge', 'Chi3v', 'fr_piperdine', 'NumSaturatedRings']
t2 = ['MinPartialCharge', 'MolLogP', 'SMR_VSA3', 'fr_ether', 'NumAliphaticRings', 'fr_ketone']
t3 = ['MolLogP', 'fr_COO', 'SlogP_VSA5', 'fr_piperdine', 'VSA_EState5', 'NumHDonors', 'NumSaturatedRings', 'fr_HOCCN', 'fr_halogen', 'fr_sulfide', 'Chi2v', 'fr_Ar_NH', 'fr_aniline', 'PEOE_VSA7', 'PEOE_VSA4', 'Number_of_Rotatable_Bonds', 'fr_unbrch_alkane', 'fr_ketone', 'fr_hdrzine']

all_feat = t1 + t2 + t3

# print(all_feat)

# all_feat = np.array(all_feat)
# all_feat = all_feat.flatten()
# testy = np.unique(all_feat)
# print(len(testy))
# print(len(all_feat))
